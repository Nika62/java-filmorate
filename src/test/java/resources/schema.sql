CREATE TYPE IF NOT EXISTS STATUS_FRIENDSHIP AS ENUM ('approved', 'not_approved');
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS USERS_LIKE_FILMS CASCADE;
DROP TABLE IF EXISTS FILMS_GENRES CASCADE;
DROP TABLE IF EXISTS RATING_MPA CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS FRIENDSHIP CASCADE;

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS
(
    ID
    BIGINT
    NOT
    NULL
    AUTO_INCREMENT,
    TITLE
    varchar
(
    127
) NOT NULL UNIQUE,
    DESCRIPTION varchar
(
    200
) UNIQUE,
    RELEASE_DATE DATE,
    DURATION INTEGER NOT NULL,
    mpa INTEGER NOT NULL,
    CONSTRAINT FILMS_PK PRIMARY KEY
(
    ID
)
    );
CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
    ID
    BIGINT
    NOT
    NULL
    AUTO_INCREMENT,
    email
    varchar
(
    255
) NOT NULL UNIQUE,
    login varchar
(
    31
) NOT NULL UNIQUE,
    name varchar
(
    31
) NOT NULL,
    birthday DATE,
    CONSTRAINT USERS_PK PRIMARY KEY
(
    ID
)
    );
CREATE TABLE IF NOT EXISTS PUBLIC.RATING_MPA
(
    ID
    INTEGER
    NOT
    NULL
    AUTO_INCREMENT,
    TITLE
    varchar
(
    10
) NOT NULL UNIQUE,
    CONSTRAINT RATING_MPA_PK PRIMARY KEY
(
    ID
)
    );
ALTER TABLE FILMS
    ADD CONSTRAINT IF NOT EXISTS FILMS_FK FOREIGN KEY (mpa) REFERENCES RATING_MPA (ID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES
(
    ID
    INTEGER
    NOT
    NULL
    AUTO_INCREMENT,
    TITLE
    VARCHAR
(
    63
) NOT NULL UNIQUE,
    CONSTRAINT GENRES_PK PRIMARY KEY
(
    ID
)
    );
CREATE TABLE IF NOT EXISTS PUBLIC.FILMS_GENRES
(
    FILM_ID
    BIGINT
    NOT
    NULL,
    GENRE_ID
    INTEGER
    NOT
    NULL,
    CONSTRAINT
    FILMS_GENRES_FK
    FOREIGN
    KEY
(
    FILM_ID
) REFERENCES PUBLIC.FILMS
(
    ID
) ON DELETE CASCADE
  ON UPDATE CASCADE,
    CONSTRAINT FILMS_GENRES_FK_1 FOREIGN KEY
(
    GENRE_ID
) REFERENCES PUBLIC.GENRES
(
    ID
)
  ON DELETE CASCADE
  ON UPDATE CASCADE
    );
CREATE TABLE IF NOT EXISTS PUBLIC.USERS_LIKE_FILMS
(
    USER_ID
    BIGINT
    NOT
    NULL,
    FILM_ID
    BIGINT
    NOT
    NULL,
    CONSTRAINT
    USERS_LIKE_FILMS_PK
    PRIMARY
    KEY
(
    USER_ID,
    FILM_ID
),
    CONSTRAINT USER_LIKE_FILMS_FK FOREIGN KEY
(
    USER_ID
) REFERENCES PUBLIC.USERS
(
    ID
) ON DELETE CASCADE
  ON UPDATE CASCADE,
    CONSTRAINT USER_LIKE_FILMS_FK_1 FOREIGN KEY
(
    FILM_ID
) REFERENCES PUBLIC.FILMS
(
    ID
)
  ON DELETE CASCADE
  ON UPDATE CASCADE
    );
CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP
(
    USER_WHO_SEND_ID
    BIGINT
    NOT
    NULL,
    USER_MUST_CONFIRM_ID
    BIGINT
    NOT
    NULL,
    STATUS
    VARCHAR
(
    63
) NOT NULL,
    CONSTRAINT FRIENDSHIP_PK PRIMARY KEY
(
    USER_WHO_SEND_ID,
    USER_MUST_CONFIRM_ID
),
    CONSTRAINT FRIENDSHIP_FK FOREIGN KEY
(
    USER_WHO_SEND_ID
) REFERENCES PUBLIC.USERS
(
    ID
) ON DELETE CASCADE
  ON UPDATE CASCADE,
    CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY
(
    USER_MUST_CONFIRM_ID
) REFERENCES PUBLIC.USERS
(
    ID
)
  ON DELETE CASCADE
  ON UPDATE CASCADE
    );
INSERT INTO GENRES (TITLE)
VALUES ('Комедия');
INSERT INTO GENRES (TITLE)
VALUES ('Драма');
INSERT INTO GENRES (TITLE)
VALUES ('Мультфильм');
INSERT INTO GENRES (TITLE)
VALUES ('Триллер');
INSERT INTO GENRES (TITLE)
VALUES ('Документальный');
INSERT INTO GENRES (TITLE)
VALUES ('Боевик');

INSERT INTO RATING_MPA (TITLE)
VALUES ('G');
INSERT INTO RATING_MPA (TITLE)
VALUES ('PG');
INSERT INTO RATING_MPA (TITLE)
VALUES ('PG-13');
INSERT INTO RATING_MPA (TITLE)
VALUES ('R');
INSERT INTO RATING_MPA (TITLE)
VALUES ('NC-17');